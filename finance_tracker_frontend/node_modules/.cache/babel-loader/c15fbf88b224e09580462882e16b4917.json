{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trommah\\\\Desktop\\\\FinancialManager\\\\finance_tracker_frontend\\\\src\\\\MonthlyFinanceAssigner.tsx\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nconnect()(MonthlyFinanceAssigner);\nconst Header = styled.div({\n  backgroundColor: \"lightgrey\",\n  padding: 10,\n  borderTopLeftRadius: 10,\n  borderTopRightRadius: 10\n});\nconst DroppableContainer = styled.div(props => ({\n  maxHeight: \"75vh\",\n  height: \"min-content\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  margin: 20,\n  boxShadow: \"3px 3px 5px black\",\n  backgroundColor: props.isDraggingOver ? \"lightblue\" : \"lightgray\",\n  borderRadius: 10\n}));\nconst DroppableZone = styled.div({\n  borderBottomLeftRadius: 10,\n  borderBottomRightRadius: 10\n});\n\nfunction getItems(assigned) {\n  const items = new Array();\n\n  if (assigned) {\n    items.push({\n      id: \"0\",\n      name: \"kyle\",\n      value: 200,\n      assigned: true\n    });\n  } else {\n    items.push({\n      id: \"1\",\n      name: \"ronson\",\n      value: 800,\n      assigned: false\n    });\n  }\n\n  return items;\n} // a little function to help us with reordering the result\n\n\nfunction reorder(list, startIndex, endIndex) {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n}\n/**\n * Moves an item from one list to another list.\n */\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  borderRadius: 10,\n  // change background colour if dragging\n  background: isDragging ? \"darkgrey\" : \"grey\",\n  boxShadow: \"2px 2px 5px black\",\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: \"25vw\",\n  overflow: \"auto\",\n  margin: 10\n});\n\nfunction MonthlyFinanceAssigner() {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [newItem, setNewItem] = React.useState({\n    item_name: \"\",\n    item_value: 0\n  });\n  const [state, setState] = React.useState({\n    unassigned: getItems(false),\n    assigned: getItems(true)\n  });\n  /**\n   * A semi-generic way to handle multiple lists. Matches\n   * the IDs of the droppable container to the names of the\n   * source arrays stored in the state.\n   */\n\n  const id2List = {\n    droppable: state.unassigned,\n    droppable2: state.assigned\n  }; // @ts-ignore\n\n  const getList = id => id2List[id];\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(getList(source.droppableId), source.index, destination.index);\n\n      if (source.droppableId === \"droppable2\") {\n        setState({ ...state,\n          assigned: items\n        });\n      } else {\n        setState({ ...state,\n          unassigned: items\n        });\n      }\n    } else {\n      const result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\n      setState({\n        unassigned: result.droppable,\n        assigned: result.droppable2\n      });\n    }\n  };\n\n  const addItem = () => {\n    setState(function (prevState) {\n      const items = prevState.unassigned;\n      items.push({\n        assigned: false,\n        id: \"3\",\n        name: \"gg\",\n        value: 90\n      });\n      return {\n        unassigned: items,\n        assigned: prevState.assigned\n      };\n    });\n  };\n\n  function MyVerticallyCenteredModal(props) {\n    return jsx(Modal, Object.assign({}, props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }), jsx(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, jsx(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, \"Modal heading\")), jsx(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, \"Item Name\"), jsx(Form.Control, {\n      placeholder: \"Enter name\",\n      onChange: e => {\n        e.preventDefault();\n        props.dispatch({\n          type: \"UPDATE_NEW_ITEM_NAME\",\n          payload: e.target.value\n        }); // setNewItem(\n        //   (prevState: { item_name: string; item_value: number }) => ({\n        //     item_name: e.target.value,\n        //     item_value: prevState.item_value,\n        //   })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    })), jsx(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, \"Item Value\"), jsx(Form.Control, {\n      placeholder: \"Enter value\",\n      onChange: e => {\n        e.preventDefault();\n        setNewItem(prevState => ({\n          item_name: prevState.item_name,\n          item_value: parseFloat(e.target.value)\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    })), jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }), jsx(\"div\", {\n      css: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, jsx(Button, {\n      variant: \"primary\",\n      type: \"submit \",\n      onClick: addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }, \"Add Item\")))), jsx(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, jsx(Button, {\n      onClick: props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, \"Close/Don't Add Item\")));\n  } // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n\n\n  return jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }, jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, jsx(MyVerticallyCenteredModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  })), jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, jsx(\"div\", {\n    css: {\n      display: \"flex\",\n      placeContent: \"space-evenly\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, jsx(Droppable, {\n    droppableId: \"droppable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, (provided, snapshot) => jsx(DroppableContainer, {\n    isDraggingOver: snapshot.isDraggingOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, jsx(Header, {\n    css: {\n      display: \"flex\",\n      placeContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, \"unassigned items\"), jsx(\"div\", {\n    onClick: () => setModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, jsx(FontAwesomeIcon, {\n    icon: faPlus,\n    css: {\n      marginTop: 5,\n      marginRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }))), jsx(DroppableZone, {\n    ref: provided.innerRef,\n    style: getListStyle(snapshot.isDraggingOver),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, state.unassigned.map((item, index) => jsx(Draggable, {\n    key: item.id,\n    draggableId: item.id,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, (provided, snapshot) => jsx(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }), item.name))), provided.placeholder))), jsx(Droppable, {\n    droppableId: \"droppable2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, (provided, snapshot) => jsx(DroppableContainer, {\n    isDraggingOver: snapshot.isDraggingOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }, jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, \"expense items\"), jsx(DroppableZone, {\n    ref: provided.innerRef,\n    style: getListStyle(snapshot.isDraggingOver),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, state.assigned.map((item, index) => jsx(Draggable, {\n    key: item.id,\n    draggableId: item.id,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, (provided, snapshot) => jsx(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }), item.name))), provided.placeholder))))));\n}\n\nexport default MonthlyFinanceAssigner;","map":{"version":3,"sources":["C:/Users/trommah/Desktop/FinancialManager/finance_tracker_frontend/src/MonthlyFinanceAssigner.tsx"],"names":["jsx","React","DragDropContext","Droppable","Draggable","styled","FontAwesomeIcon","faPlus","Button","Form","Modal","connect","MonthlyFinanceAssigner","Header","div","backgroundColor","padding","borderTopLeftRadius","borderTopRightRadius","DroppableContainer","props","maxHeight","height","display","flexDirection","margin","boxShadow","isDraggingOver","borderRadius","DroppableZone","borderBottomLeftRadius","borderBottomRightRadius","getItems","assigned","items","Array","push","id","name","value","reorder","list","startIndex","endIndex","result","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","grid","getItemStyle","isDragging","draggableStyle","userSelect","background","getListStyle","width","overflow","modalShow","setModalShow","useState","newItem","setNewItem","item_name","item_value","state","setState","unassigned","id2List","droppable","droppable2","getList","onDragEnd","addItem","prevState","MyVerticallyCenteredModal","e","preventDefault","dispatch","type","payload","target","parseFloat","justifyContent","onHide","placeContent","provided","snapshot","marginTop","marginRight","innerRef","map","item","draggableProps","dragHandleProps","style","placeholder"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { MainContent } from \"./Enums/MainContent\";\nimport React from \"react\";\nimport { DraggableLocation, DropResult } from \"react-beautiful-dnd\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nconnect()(MonthlyFinanceAssigner);\n\ninterface Item {\n  id: string;\n  name: string;\n  value: number;\n  assigned: boolean;\n}\n\nconst Header = styled.div({\n  backgroundColor: \"lightgrey\",\n  padding: 10,\n  borderTopLeftRadius: 10,\n  borderTopRightRadius: 10,\n});\n\nconst DroppableContainer = styled.div((props: { isDraggingOver: boolean }) => ({\n  maxHeight: \"75vh\",\n  height: \"min-content\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  margin: 20,\n  boxShadow: \"3px 3px 5px black\",\n  backgroundColor: props.isDraggingOver ? \"lightblue\" : \"lightgray\",\n  borderRadius: 10,\n}));\n\nconst DroppableZone = styled.div({\n  borderBottomLeftRadius: 10,\n  borderBottomRightRadius: 10,\n});\n\nfunction getItems(assigned: boolean): Item[] {\n  const items: Item[] = new Array();\n  if (assigned) {\n    items.push({ id: \"0\", name: \"kyle\", value: 200, assigned: true });\n  } else {\n    items.push({ id: \"1\", name: \"ronson\", value: 800, assigned: false });\n  }\n\n  return items;\n}\n\n// a little function to help us with reordering the result\nfunction reorder(list: Item[], startIndex: number, endIndex: number): Item[] {\n  const result: Item[] = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (\n  source: any,\n  destination: any,\n  droppableSource: DraggableLocation,\n  droppableDestination: DraggableLocation\n) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result: any = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  borderRadius: 10,\n  // change background colour if dragging\n  background: isDragging ? \"darkgrey\" : \"grey\",\n  boxShadow: \"2px 2px 5px black\",\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver: boolean) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: \"25vw\",\n  overflow: \"auto\",\n  margin: 10,\n});\n\nfunction MonthlyFinanceAssigner() {\n  const [modalShow, setModalShow] = React.useState<boolean>(false);\n\n  const [newItem, setNewItem] = React.useState<{\n    item_name: string;\n    item_value: number;\n  }>({ item_name: \"\", item_value: 0 });\n  const [state, setState] = React.useState<{\n    unassigned: Item[];\n    assigned: Item[];\n  }>({ unassigned: getItems(false), assigned: getItems(true) });\n\n  /**\n   * A semi-generic way to handle multiple lists. Matches\n   * the IDs of the droppable container to the names of the\n   * source arrays stored in the state.\n   */\n  const id2List: { droppable: Item[]; droppable2: Item[] } = {\n    droppable: state.unassigned,\n    droppable2: state.assigned,\n  };\n\n  // @ts-ignore\n  const getList = (id: string) => id2List[id];\n\n  const onDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items: Item[] = reorder(\n        getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      if (source.droppableId === \"droppable2\") {\n        setState({ ...state, assigned: items });\n      } else {\n        setState({ ...state, unassigned: items });\n      }\n    } else {\n      const result = move(\n        getList(source.droppableId),\n        getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      setState({\n        unassigned: result.droppable,\n        assigned: result.droppable2,\n      });\n    }\n  };\n\n  const addItem = () => {\n    setState(function (prevState) {\n      const items = prevState.unassigned;\n      items.push({ assigned: false, id: \"3\", name: \"gg\", value: 90 });\n      return { unassigned: items, assigned: prevState.assigned };\n    });\n  };\n\n  function MyVerticallyCenteredModal(props: any) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Modal heading\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>Item Name</Form.Label>\n              <Form.Control\n                placeholder=\"Enter name\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  props.dispatch({\n                    type: \"UPDATE_NEW_ITEM_NAME\",\n                    payload: e.target.value,\n                  });\n                  // setNewItem(\n                  //   (prevState: { item_name: string; item_value: number }) => ({\n                  //     item_name: e.target.value,\n                  //     item_value: prevState.item_value,\n                  //   })\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Item Value</Form.Label>\n              <Form.Control\n                placeholder=\"Enter value\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setNewItem(\n                    (prevState: { item_name: string; item_value: number }) => ({\n                      item_name: prevState.item_name,\n                      item_value: parseFloat(e.target.value),\n                    })\n                  );\n                }}\n              />\n            </Form.Group>\n            <br />\n            <div css={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n              <Button variant=\"primary\" type=\"submit \" onClick={addItem}>\n                Add Item\n              </Button>\n            </div>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close/Don't Add Item</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  return (\n    <React.Fragment>\n      <div>\n        <MyVerticallyCenteredModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div css={{ display: \"flex\", placeContent: \"space-evenly\" }}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <DroppableContainer isDraggingOver={snapshot.isDraggingOver}>\n                <Header\n                  css={{ display: \"flex\", placeContent: \"space-between\" }}\n                >\n                  <div>unassigned items</div>\n                  <div onClick={() => setModalShow(true)}>\n                    <FontAwesomeIcon\n                      icon={faPlus}\n                      css={{ marginTop: 5, marginRight: 15 }}\n                    />\n                  </div>\n                </Header>\n                <DroppableZone\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                >\n                  {state.unassigned.map((item: Item, index: number) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          {item.name}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </DroppableZone>\n              </DroppableContainer>\n            )}\n          </Droppable>\n          <Droppable droppableId=\"droppable2\">\n            {(provided, snapshot) => (\n              <DroppableContainer isDraggingOver={snapshot.isDraggingOver}>\n                <Header>expense items</Header>\n                <DroppableZone\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                >\n                  {state.assigned.map((item: Item, index: number) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          {item.name}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </DroppableZone>\n              </DroppableContainer>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    </React.Fragment>\n  );\n}\n\nexport default MonthlyFinanceAssigner;\n"]},"metadata":{},"sourceType":"module"}