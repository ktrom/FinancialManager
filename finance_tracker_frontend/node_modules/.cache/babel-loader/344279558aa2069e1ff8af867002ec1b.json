{"ast":null,"code":"import { createStore } from \"redux\"; //\n// const initialState = {\n//   addItemModal: {\n//     name: \"\",\n//     value: 0,\n//   },\n// };\n//\n// function reducer(state = initialState, action: any) {\n//   if (action.type === \"UPDATE_NEW_ITEM_NAME\") {\n//     return Object.assign({}, state, {\n//       addItemModal: { name: action.payload, value: state.addItemModal.value },\n//     });\n//   }\n//   if (action.type === \"UPDATE_NEW_ITEM_VALUE\") {\n//     return Object.assign({}, state, {\n//       addItemModal: { name: state.addItemModal.name, value: action.payload },\n//     });\n//   }\n//\n//   return state;\n// }\n\nexport let Constants;\n\n(function (Constants) {\n  Constants[\"Add_Item\"] = \"Add_ITEM\";\n})(Constants || (Constants = {}));\n\nconst init = {\n  list: []\n};\nexport function demoReducer(state = init, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\nconst defaultStore = createStore(reducer);\nexport default defaultStore;","map":{"version":3,"sources":["C:/Users/trommah/Desktop/FinancialManager/finance_tracker_frontend/src/store/Store.tsx"],"names":["createStore","Constants","init","list","demoReducer","state","action","type","defaultStore","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAIZ,MAAMC,IAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE;AADiB,CAAzB;AAIA,OAAO,SAASC,WAAT,CAAqBC,KAAiB,GAAGH,IAAzC,EAA+CI,MAA/C,EAAwE;AAC7E,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;AAFJ;AAID;AAED,MAAMG,YAAY,GAAGR,WAAW,CAACS,OAAD,CAAhC;AAEA,eAAeD,YAAf","sourcesContent":["import { createStore } from \"redux\";\n//\n// const initialState = {\n//   addItemModal: {\n//     name: \"\",\n//     value: 0,\n//   },\n// };\n//\n// function reducer(state = initialState, action: any) {\n//   if (action.type === \"UPDATE_NEW_ITEM_NAME\") {\n//     return Object.assign({}, state, {\n//       addItemModal: { name: action.payload, value: state.addItemModal.value },\n//     });\n//   }\n//   if (action.type === \"UPDATE_NEW_ITEM_VALUE\") {\n//     return Object.assign({}, state, {\n//       addItemModal: { name: state.addItemModal.name, value: action.payload },\n//     });\n//   }\n//\n//   return state;\n// }\n\nexport interface IDemoState {\n  list: string[];\n}\n\nexport enum Constants {\n  Add_Item = \"Add_ITEM\",\n}\n\nconst init: IDemoState = {\n  list: [],\n};\n\nexport function demoReducer(state: IDemoState = init, action: any): IDemoState {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nconst defaultStore = createStore(reducer);\n\nexport default defaultStore;\n"]},"metadata":{},"sourceType":"module"}