{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trommah\\\\Desktop\\\\FinancialManager\\\\finance_tracker_frontend\\\\src\\\\MonthlyFinanceAssigner.tsx\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nconst [newItem, setNewItem] = React.useState({\n  item_name: \"\",\n  item_value: 0\n});\nconst [state, setState] = React.useState({\n  unassigned: getItems(false),\n  assigned: getItems(true)\n});\nconst Header = styled.div({\n  backgroundColor: \"lightgrey\",\n  padding: 10,\n  borderTopLeftRadius: 10,\n  borderTopRightRadius: 10\n});\nconst DroppableContainer = styled.div(props => ({\n  maxHeight: \"75vh\",\n  height: \"min-content\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  margin: 20,\n  boxShadow: \"3px 3px 5px black\",\n  backgroundColor: props.isDraggingOver ? \"lightblue\" : \"lightgray\",\n  borderRadius: 10\n}));\nconst DroppableZone = styled.div({\n  borderBottomLeftRadius: 10,\n  borderBottomRightRadius: 10\n});\n\nfunction getItems(assigned) {\n  const items = new Array();\n\n  if (assigned) {\n    items.push({\n      id: \"0\",\n      name: \"kyle\",\n      value: 200,\n      assigned: true\n    });\n  } else {\n    items.push({\n      id: \"1\",\n      name: \"ronson\",\n      value: 800,\n      assigned: false\n    });\n  }\n\n  return items;\n} // a little function to help us with reordering the result\n\n\nfunction reorder(list, startIndex, endIndex) {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n}\n/**\n * Moves an item from one list to another list.\n */\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  borderRadius: 10,\n  // change background colour if dragging\n  background: isDragging ? \"darkgrey\" : \"grey\",\n  boxShadow: \"2px 2px 5px black\",\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: \"25vw\",\n  overflow: \"auto\",\n  margin: 10\n});\n\nfunction MyVerticallyCenteredModal(props) {\n  return jsx(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, jsx(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Modal heading\")), jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Item Name\"), jsx(Form.Control, {\n    placeholder: \"Enter name\",\n    onChange: e => {\n      setNewItem(prevState => ({\n        item_name: e.target.value,\n        item_value: prevState.item_value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Item Value\"), jsx(Form.Control, {\n    placeholder: \"Enter value\",\n    onChange: e => {\n      setNewItem(prevState => ({\n        item_name: prevState.item_name,\n        item_value: parseFloat(e.target.value)\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), jsx(\"div\", {\n    css: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, jsx(Button, {\n    variant: \"primary\",\n    type: \"submit \",\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Create Account\")))), jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, jsx(Button, {\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n}\n\nconst addItem = () => {\n  setState(function (prevState) {\n    const items = prevState.unassigned;\n    items.push({\n      assigned: false,\n      id: \"3\",\n      name: \"gg\",\n      value: 90\n    });\n    return {\n      unassigned: items,\n      assigned: prevState.assigned\n    };\n  });\n};\n\nfunction MonthlyFinanceAssigner() {\n  const [modalShow, setModalShow] = React.useState(false);\n  /**\n   * A semi-generic way to handle multiple lists. Matches\n   * the IDs of the droppable container to the names of the\n   * source arrays stored in the state.\n   */\n\n  const id2List = {\n    droppable: state.unassigned,\n    droppable2: state.assigned\n  }; // @ts-ignore\n\n  const getList = id => id2List[id];\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(getList(source.droppableId), source.index, destination.index);\n\n      if (source.droppableId === \"droppable2\") {\n        setState({ ...state,\n          assigned: items\n        });\n      } else {\n        setState({ ...state,\n          unassigned: items\n        });\n      }\n    } else {\n      const result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\n      setState({\n        unassigned: result.droppable,\n        assigned: result.droppable2\n      });\n    }\n  }; // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n\n\n  return jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, jsx(MyVerticallyCenteredModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  })), jsx(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, jsx(\"div\", {\n    css: {\n      display: \"flex\",\n      placeContent: \"space-evenly\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, jsx(Droppable, {\n    droppableId: \"droppable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, (provided, snapshot) => jsx(DroppableContainer, {\n    isDraggingOver: snapshot.isDraggingOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, jsx(Header, {\n    css: {\n      display: \"flex\",\n      placeContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, \"unassigned items\"), jsx(\"div\", {\n    onClick: () => setModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }, jsx(FontAwesomeIcon, {\n    icon: faPlus,\n    css: {\n      marginTop: 5,\n      marginRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }))), jsx(DroppableZone, {\n    ref: provided.innerRef,\n    style: getListStyle(snapshot.isDraggingOver),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, state.unassigned.map((item, index) => jsx(Draggable, {\n    key: item.id,\n    draggableId: item.id,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, (provided, snapshot) => jsx(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }), item.name))), provided.placeholder))), jsx(Droppable, {\n    droppableId: \"droppable2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, (provided, snapshot) => jsx(DroppableContainer, {\n    isDraggingOver: snapshot.isDraggingOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, \"expense items\"), jsx(DroppableZone, {\n    ref: provided.innerRef,\n    style: getListStyle(snapshot.isDraggingOver),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }, state.assigned.map((item, index) => jsx(Draggable, {\n    key: item.id,\n    draggableId: item.id,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, (provided, snapshot) => jsx(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }), item.name))), provided.placeholder))))));\n}\n\nexport default MonthlyFinanceAssigner;","map":{"version":3,"sources":["C:/Users/trommah/Desktop/FinancialManager/finance_tracker_frontend/src/MonthlyFinanceAssigner.tsx"],"names":["jsx","React","DragDropContext","Droppable","Draggable","styled","FontAwesomeIcon","faPlus","Button","Form","Modal","newItem","setNewItem","useState","item_name","item_value","state","setState","unassigned","getItems","assigned","Header","div","backgroundColor","padding","borderTopLeftRadius","borderTopRightRadius","DroppableContainer","props","maxHeight","height","display","flexDirection","margin","boxShadow","isDraggingOver","borderRadius","DroppableZone","borderBottomLeftRadius","borderBottomRightRadius","items","Array","push","id","name","value","reorder","list","startIndex","endIndex","result","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","grid","getItemStyle","isDragging","draggableStyle","userSelect","background","getListStyle","width","overflow","MyVerticallyCenteredModal","e","prevState","target","parseFloat","justifyContent","addItem","onHide","MonthlyFinanceAssigner","modalShow","setModalShow","id2List","droppable","droppable2","getList","onDragEnd","placeContent","provided","snapshot","marginTop","marginRight","innerRef","map","item","draggableProps","dragHandleProps","style","placeholder"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { MainContent } from \"./Enums/MainContent\";\nimport React from \"react\";\nimport { DraggableLocation, DropResult } from \"react-beautiful-dnd\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\n\nconst [newItem, setNewItem] = React.useState<{\n  item_name: string;\n  item_value: number;\n}>({ item_name: \"\", item_value: 0 });\nconst [state, setState] = React.useState<{\n  unassigned: Item[];\n  assigned: Item[];\n}>({ unassigned: getItems(false), assigned: getItems(true) });\n\ninterface Item {\n  id: string;\n  name: string;\n  value: number;\n  assigned: boolean;\n}\n\nconst Header = styled.div({\n  backgroundColor: \"lightgrey\",\n  padding: 10,\n  borderTopLeftRadius: 10,\n  borderTopRightRadius: 10,\n});\n\nconst DroppableContainer = styled.div((props: { isDraggingOver: boolean }) => ({\n  maxHeight: \"75vh\",\n  height: \"min-content\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  margin: 20,\n  boxShadow: \"3px 3px 5px black\",\n  backgroundColor: props.isDraggingOver ? \"lightblue\" : \"lightgray\",\n  borderRadius: 10,\n}));\n\nconst DroppableZone = styled.div({\n  borderBottomLeftRadius: 10,\n  borderBottomRightRadius: 10,\n});\n\nfunction getItems(assigned: boolean): Item[] {\n  const items: Item[] = new Array();\n  if (assigned) {\n    items.push({ id: \"0\", name: \"kyle\", value: 200, assigned: true });\n  } else {\n    items.push({ id: \"1\", name: \"ronson\", value: 800, assigned: false });\n  }\n\n  return items;\n}\n\n// a little function to help us with reordering the result\nfunction reorder(list: Item[], startIndex: number, endIndex: number): Item[] {\n  const result: Item[] = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (\n  source: any,\n  destination: any,\n  droppableSource: DraggableLocation,\n  droppableDestination: DraggableLocation\n) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result: any = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  borderRadius: 10,\n  // change background colour if dragging\n  background: isDragging ? \"darkgrey\" : \"grey\",\n  boxShadow: \"2px 2px 5px black\",\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver: boolean) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: \"25vw\",\n  overflow: \"auto\",\n  margin: 10,\n});\n\nfunction MyVerticallyCenteredModal(props: any) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Modal heading\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group>\n            <Form.Label>Item Name</Form.Label>\n            <Form.Control\n              placeholder=\"Enter name\"\n              onChange={(e) => {\n                setNewItem(\n                  (prevState: { item_name: string; item_value: number }) => ({\n                    item_name: e.target.value,\n                    item_value: prevState.item_value,\n                  })\n                );\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Item Value</Form.Label>\n            <Form.Control\n              placeholder=\"Enter value\"\n              onChange={(e) => {\n                setNewItem(\n                  (prevState: { item_name: string; item_value: number }) => ({\n                    item_name: prevState.item_name,\n                    item_value: parseFloat(e.target.value),\n                  })\n                );\n              }}\n            />\n          </Form.Group>\n          <br />\n          <div css={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n            <Button variant=\"primary\" type=\"submit \" onClick={addItem}>\n              Create Account\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nconst addItem = () => {\n  setState(function (prevState) {\n    const items = prevState.unassigned;\n    items.push({ assigned: false, id: \"3\", name: \"gg\", value: 90 });\n    return { unassigned: items, assigned: prevState.assigned };\n  });\n};\nfunction MonthlyFinanceAssigner() {\n  const [modalShow, setModalShow] = React.useState<boolean>(false);\n\n  /**\n   * A semi-generic way to handle multiple lists. Matches\n   * the IDs of the droppable container to the names of the\n   * source arrays stored in the state.\n   */\n  const id2List: { droppable: Item[]; droppable2: Item[] } = {\n    droppable: state.unassigned,\n    droppable2: state.assigned,\n  };\n\n  // @ts-ignore\n  const getList = (id: string) => id2List[id];\n\n  const onDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items: Item[] = reorder(\n        getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      if (source.droppableId === \"droppable2\") {\n        setState({ ...state, assigned: items });\n      } else {\n        setState({ ...state, unassigned: items });\n      }\n    } else {\n      const result = move(\n        getList(source.droppableId),\n        getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      setState({\n        unassigned: result.droppable,\n        assigned: result.droppable2,\n      });\n    }\n  };\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  return (\n    <React.Fragment>\n      <div>\n        <MyVerticallyCenteredModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div css={{ display: \"flex\", placeContent: \"space-evenly\" }}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <DroppableContainer isDraggingOver={snapshot.isDraggingOver}>\n                <Header\n                  css={{ display: \"flex\", placeContent: \"space-between\" }}\n                >\n                  <div>unassigned items</div>\n                  <div onClick={() => setModalShow(true)}>\n                    <FontAwesomeIcon\n                      icon={faPlus}\n                      css={{ marginTop: 5, marginRight: 15 }}\n                    />\n                  </div>\n                </Header>\n                <DroppableZone\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                >\n                  {state.unassigned.map((item: Item, index: number) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          {item.name}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </DroppableZone>\n              </DroppableContainer>\n            )}\n          </Droppable>\n          <Droppable droppableId=\"droppable2\">\n            {(provided, snapshot) => (\n              <DroppableContainer isDraggingOver={snapshot.isDraggingOver}>\n                <Header>expense items</Header>\n                <DroppableZone\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                >\n                  {state.assigned.map((item: Item, index: number) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          {item.name}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </DroppableZone>\n              </DroppableContainer>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    </React.Fragment>\n  );\n}\n\nexport default MonthlyFinanceAssigner;\n"]},"metadata":{},"sourceType":"module"}